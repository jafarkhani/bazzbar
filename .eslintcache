[{"D:\\projects\\com\\react\\bazzbar\\src\\components\\ground.js":"1","D:\\projects\\com\\react\\bazzbar\\src\\components\\Hole\\hole.js":"2","D:\\projects\\com\\react\\bazzbar\\src\\components\\ScoreList\\ScoreList.js":"3","D:\\projects\\com\\react\\bazzbar\\src\\App.js":"4","D:\\projects\\com\\react\\bazzbar\\src\\index.js":"5"},{"size":2980,"mtime":1609692259670,"results":"6","hashOfConfig":"7"},{"size":355,"mtime":1608715273097,"results":"8","hashOfConfig":"7"},{"size":1131,"mtime":1609689812217,"results":"9","hashOfConfig":"7"},{"size":1282,"mtime":1609688836607,"results":"10","hashOfConfig":"7"},{"size":166,"mtime":1608646573811,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"1vob9d3",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\com\\react\\bazzbar\\src\\components\\ground.js",["24","25","26"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport Hole from './Hole/hole';\r\n\r\nconst Ground = (props) => {\r\n\r\n    const HoleCount = 7;\r\n    const timeout = useRef(null);\r\n    const interval = useRef(null);\r\n\r\n    const [loading, SetLoading] = useState(false);\r\n    const [timer, SetTimer] = useState(3);\r\n    const [hits, Sethits] = useState(0);\r\n    const [totalMoles, SettotalMoles] = useState(0);\r\n    const [molePos, SetmolePos] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        interval.current = setInterval(() => {\r\n            SetTimer(timer => timer - 1);\r\n        }, 1000);\r\n\r\n        SettotalMoles(totalMoles + 1);\r\n\r\n    }, [props.player]);\r\n\r\n    useEffect(() => {\r\n        if (timer > 0)\r\n            return;\r\n\r\n        clearInterval(interval.current);\r\n        clearTimeout(timeout.current);\r\n        // save the hits \r\n        SaveScore();\r\n\r\n    }, [timer]);\r\n\r\n    function ComputScore(hits, total){\r\n        return Math.round((hits/total)*100);\r\n    }\r\n\r\n    const SaveScore = async () => {\r\n\r\n        SetLoading(true);\r\n        fetch(\"http://localhost:5000/AddScore?\" + new URLSearchParams({\r\n            name: props.player.name,\r\n            total: totalMoles,\r\n            hits: hits,\r\n            score: ComputScore(hits,totalMoles)\r\n\r\n        })).then(response => {\r\n                SetLoading(false);\r\n                props.SaveScore({\r\n                    ...props.player,\r\n                    playing: false,\r\n                    hits: hits,\r\n                    score: ComputScore(hits,totalMoles),\r\n                    totalMoles: totalMoles\r\n                })\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (totalMoles === 0)\r\n            return;\r\n\r\n        let random;\r\n        while(true){\r\n            random = Math.floor(Math.random() * 7) + 1;\r\n            if(random !== molePos)\r\n                break;\r\n        }\r\n        SetmolePos(random);\r\n\r\n        timeout.current = setTimeout(() => {\r\n            console.log(\"timeout\")\r\n            SettotalMoles(totalMoles + 1);\r\n        }, 1000);\r\n\r\n    }, [totalMoles]);\r\n\r\n    const Addhit = () => {\r\n        Sethits(hits + 1);\r\n        clearTimeout(timeout.current);\r\n        SettotalMoles(totalMoles + 1);\r\n    }\r\n\r\n    let holes = [];\r\n    for (let i = 1; i <= HoleCount; i++) {\r\n        holes.push(<Hole\r\n            key={i}\r\n            id={i}\r\n            totalMoles={totalMoles}\r\n            hits={hits}\r\n            molPos={molePos}\r\n            Addhit={Addhit}\r\n        />);\r\n    }\r\n\r\n    if (loading)\r\n        return (\r\n            <div>Save hits ....</div>\r\n        );\r\n\r\n    return (\r\n        <div align=\"center\">\r\n            <h3>Player: {props.player.name} </h3>\r\n            <h3>Play Time remain: {timer} </h3>\r\n            <h3>Total Moles: {props.player.totalMoles} </h3>\r\n            <h3>Your hits: {props.player.hits} </h3>\r\n            <h3>Your score: {props.player.score} </h3>\r\n            {holes}\r\n        </div>);\r\n}\r\n\r\nexport default Ground;","D:\\projects\\com\\react\\bazzbar\\src\\components\\Hole\\hole.js",["27","28"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport './hole.scss';\r\n\r\n\r\nconst Hole = (props) => {\r\n\r\n    return (\r\n    <div className=\"Hole\" key={props.id}>        \r\n        {\r\n            props.molPos !== props.id ? null : \r\n                <div className=\"mole\" onClick={props.Addhit}></div>\r\n        }\r\n    </div>);\r\n}\r\n\r\nexport default Hole;","D:\\projects\\com\\react\\bazzbar\\src\\components\\ScoreList\\ScoreList.js",[],"D:\\projects\\com\\react\\bazzbar\\src\\App.js",[],"D:\\projects\\com\\react\\bazzbar\\src\\index.js",[],{"ruleId":"29","severity":1,"message":"30","line":24,"column":8,"nodeType":"31","endLine":24,"endColumn":22,"suggestions":"32"},{"ruleId":"29","severity":1,"message":"33","line":35,"column":8,"nodeType":"31","endLine":35,"endColumn":15,"suggestions":"34"},{"ruleId":"29","severity":1,"message":"35","line":80,"column":8,"nodeType":"31","endLine":80,"endColumn":20,"suggestions":"36"},{"ruleId":"37","severity":1,"message":"38","line":2,"column":17,"nodeType":"39","messageId":"40","endLine":2,"endColumn":26},{"ruleId":"37","severity":1,"message":"41","line":2,"column":28,"nodeType":"39","messageId":"40","endLine":2,"endColumn":36},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'totalMoles'. Either include it or remove the dependency array. You can also do a functional update 'SettotalMoles(t => ...)' if you only need 'totalMoles' in the 'SettotalMoles' call.","ArrayExpression",["42"],"React Hook useEffect has a missing dependency: 'SaveScore'. Either include it or remove the dependency array.",["43"],"React Hook useEffect has a missing dependency: 'molePos'. Either include it or remove the dependency array.",["44"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.",{"desc":"45","fix":"46"},{"desc":"47","fix":"48"},{"desc":"49","fix":"50"},"Update the dependencies array to be: [props.player, totalMoles]",{"range":"51","text":"52"},"Update the dependencies array to be: [SaveScore, timer]",{"range":"53","text":"54"},"Update the dependencies array to be: [molePos, totalMoles]",{"range":"55","text":"56"},[654,668],"[props.player, totalMoles]",[884,891],"[SaveScore, timer]",[2070,2082],"[molePos, totalMoles]"]